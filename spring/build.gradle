plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '2.7.18'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.ttasum'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    providedRuntime
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-jdbc' // JDBC를 통한 DB 연결 (MyBatis 등과 함께 사용 가능)
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // JPA 기반 ORM 사용을 위한 의존성
//    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf' // 서버 사이드 렌더링을 위한 Thymeleaf 템플릿 엔진
    implementation 'org.springframework.boot:spring-boot-starter-web' // MVC 기반 REST API 웹 애플리케이션
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    testImplementation 'io.projectreactor:reactor-test'
    compileOnly 'org.projectlombok:lombok' // 컴파일 시 Lombok 어노테이션 지원 (getter/setter 등)
//    developmentOnly 'org.springframework.boot:spring-boot-devtools' // 핫 리로딩 등 개발 편의 기능 제공
    runtimeOnly 'com.mysql:mysql-connector-j' // MySQL 데이터베이스 연동용 드라이버
    annotationProcessor 'org.projectlombok:lombok' // Lombok 어노테이션을 처리하는 프로세서
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher' // JUnit 플랫폼 런처 (테스트 실행용)
    testImplementation 'org.springframework.boot:spring-boot-starter-test' // 단위 테스트, 통합 테스트용 기본 테스트 라이브러리
    testImplementation 'io.projectreactor:reactor-test' // WebFlux의 비동기 테스트를 위한 Reactor 테스트 도구
//    testImplementation 'com.h2database:h2' // 인메모리 DB
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'io.github.cdimascio:dotenv-java:2.2.4'  //.env

    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
}

tasks.named('test') {
    useJUnitPlatform()
}

// build.gradle
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

//test환경시 커스텀 어펜더 접근 제한
test {
    useJUnitPlatform()
    systemProperty 'spring.profiles.active', 'test'
}